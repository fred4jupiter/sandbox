<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- import spring-security-separation-sec project modul configuration -->
	<beans:import resource="classpath:/META-INF/spring/ac-security.xml" />

	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<intercept-url pattern="/secure/extreme/**" access="hasRole('RIGHT_EXTREM_SECURE')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a whitelisting approach where access is not allowed 
			by default -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login />
		<logout logout-success-url="/loggedout.jsp" />
		<remember-me />
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
	</http>

</beans:beans>
